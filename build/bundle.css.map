{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Table.svelte",
    "../../Map.svelte",
    "../../Slider.svelte",
    "../../Total.svelte",
    "../../Chart.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Map from \"./Map.svelte\";\n  import Table from \"./Table.svelte\";\n  import Total from \"./Total.svelte\";\n  import Slider from \"./Slider.svelte\";\n  import data from \"./data\";\n</script>\n\n<style>\n  :global(body, html) {\n    /* this will apply to <body> */\n    height: 100%;\n  }\n\n  :global(*) {\n    font-family: \"Roboto\", sans-serif;\n  }\n\n  .grid-container {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 0fr 0fr 0fr 0fr 1fr 2.7em;\n    grid-template-areas: \"header\" \"map\" \"total\" \"slider\" \"table\" \"footer\";\n    height: 100%;\n    font-size: 0.8em;\n  }\n\n  @media (min-aspect-ratio: 4/3) {\n    .grid-container {\n      display: grid;\n      grid-template-columns: 1.4fr 0.6fr;\n      grid-template-rows: 0fr 1fr 0fr 0fr 2.7em;\n      grid-template-areas: \"header header\" \"map table\" \"total table\" \"slider table\" \"footer footer\";\n    }\n\n    .map {\n      margin-top: 2px;\n    }\n  }\n\n  @media (max-width: 1000px) {\n    .grid-container {\n      font-size: 0.7em;\n    }\n  }\n\n  @media (max-width: 800px) {\n    .grid-container {\n      font-size: 0.6em;\n    }\n  }\n\n  @media (max-width: 600px) {\n    .grid-container {\n      font-size: 0.5em;\n    }\n  }\n  h1,\n  span {\n    grid-area: header;\n    text-align: center;\n    margin: 0;\n    padding: 0.5em;\n    background: #b99a9a;\n    color: white;\n    font-size: 1.5em;\n  }\n  span {\n    font-size: 0.8em;\n    width: 100%;\n    box-sizing: border-box;\n    background: #eee;\n    color: #aaa;\n    display: inline-block;\n  }\n\n  a {\n    color: #999;\n    text-decoration: underline;\n  }\n\n  .slider {\n    grid-area: slider;\n  }\n\n  .total {\n    grid-area: total;\n  }\n\n  .map {\n    grid-area: map;\n    background: #eee;\n  }\n\n  .table {\n    grid-area: table;\n    overflow: scroll;\n  }\n\n  footer {\n    grid-area: footer;\n    overflow: scroll;\n  }\n</style>\n\n<svelte:head>\n  <link\n    href=\"https://fonts.googleapis.com/css?family=Roboto&display=swap\"\n    rel=\"stylesheet\" />\n</svelte:head>\n\n{#await data.fetch() then data}\n  <main class=\"grid-container\">\n    <h1 class=\"header\">COVID-19 Map</h1>\n    <div class=\"map\">\n      <Map body={data.countries} countryCodes={data.countryCodes} />\n    </div>\n    <div class=\"total\">\n      <Total body={data.countries} />\n    </div>\n    <div class=\"slider\">\n      <Slider dates={data.dates} />\n    </div>\n    <div class=\"table\">\n      <Table class=\"table\" body={data.countries} countryCodes={data.countryCodes} />\n    </div>\n    <footer>\n      <span>\n        Data source:\n        <a href=\"https://github.com/CSSEGISandData/COVID-19\">\n          https://github.com/CSSEGISandData/COVID-19\n        </a>\n        | Made By:\n        <a href=\"http://www.pixelscript.net/\">pixelscript</a>\n        | Source:\n        <a href=\"https://github.com/pixelscript/covid-19-map\">\n          https://github.com/pixelscript/covid-19-map\n        </a>\n      </span>\n    </footer>\n  </main>\n{/await}\n",
    "<script>\n  import { selectedCountryCode, selectedDateIndex } from \"./main.store\";\n  import { afterUpdate } from \"svelte\";\n  export let body;\n  let tBody;\n  let over = false;\n  afterUpdate(() => {\n    const selected = tBody.querySelector(\".selected\");\n    if (selected && !over) {\n      selected.scrollIntoView(false);\n    }\n  });\n</script>\n\n<style>\n  table {\n    width: 100%;\n    max-height: 100%;\n    border-color: red;\n    background: white;\n  }\n\n  .hider {\n    background: white;\n    position: absolute;\n    height: 2px;\n    width: 100%;\n    z-index: 1;\n    left: 0px;\n  }\n  thead {\n    background: white;\n  }\n  th {\n    box-shadow: 0 2px 2px -1px rgba(0, 0, 0, 0.4);\n    position: sticky;\n    top: 2px;\n  }\n  table tr th {\n    background: #52657c;\n    color: white;\n    text-align: left;\n  }\n  table tr td {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n  table tr:nth-child(odd) {\n    background-color: rgba(171, 206, 227, 0.3);\n  }\n  table tr:hover {\n    background-color: #abcee3;\n  }\n\n  table tr.selected {\n    background-color: #abcee3;\n  }\n  table th,\n  table td {\n    padding: 0.5rem;\n  }\n\n  .limit {\n    max-width: 170px;\n    text-overflow: ellipsis;\n  }\n</style>\n\n<div class=\"hider\" />\n<table on:mouseover={() => (over = true)} on:mouseleave={() => (over = false)}>\n  <thead>\n    <tr>\n      <th>Country/Region</th>\n      <th>Cases</th>\n      <th>Deaths</th>\n      <th>Recoveries</th>\n    </tr>\n  </thead>\n  <tbody bind:this={tBody}>\n    {#each body as row}\n      <tr\n        class={row.codeA2 === $selectedCountryCode ? 'selected' : ''}\n        on:mouseover={() => {\n          selectedCountryCode.set(row.codeA2);\n        }}>\n        <td class=\"limit tooltip\" title={row.name}>{row.name}</td>\n        <td>{row.data[$selectedDateIndex]['cases'].value.toLocaleString()}</td>\n        <td>{row.data[$selectedDateIndex]['deaths'].value.toLocaleString()}</td>\n        <td>\n          {row.data[$selectedDateIndex]['recoveries'].value.toLocaleString()}\n        </td>\n      </tr>\n    {/each}\n  </tbody>\n</table>\n",
    "<script>\n  import { draw } from 'svelte/transition';\n  import { flip } from 'svelte/animate';\n  import _ from 'lodash';\n  import { selectedCountryCode, selectedDateIndex } from './main.store';\n  import world from \"./world-mill.json\";\n  import { fade } from 'svelte/transition';\n\n  export let body = [];\n\n  const paths = world.paths;\n  let countries;\n  $: if (body.length && !isNaN($selectedDateIndex)) {\n    countries= [];\n    Object.keys(paths).forEach((code)=>{\n      const d =  _.find(body, {codeA2: code});\n      const total = d ? d.data[$selectedDateIndex]['cases'].value : 0;\n      const log = d ? d.data[$selectedDateIndex]['cases'].logPercent : 0;\n      const hasData = d ? true : false;\n      countries.push({\n        code,\n        path: paths[code].path,\n        name: paths[code].name,\n        color: logToCol(total,log),\n        hasData,\n        total\n      })\n    });\n    countries = countries;\n  }\n\n  function logToCol(total,log){\n    if(!total) {\n      return \"hsl(10,0%,70%)\";\n    }\n    return \"hsl(10,\"+ log +\"%,60%)\";\n  }\n</script>\n\n<style>\n  figure {\n    margin: 0 0 1em 0;\n    text-align: center;\n    margin: 0 auto;\n    height:100%;\n  }\n\n  svg {\n    width: 100%;\n    margin: 0 0 1em 0;\n    height:100%;\n  }\n  figure {\n    padding: 10px;\n    box-sizing: border-box;\n  }\n</style>\n\n<figure>\n  <svg\n    version=\"1.1\"\n    id=\"Layer_1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n    x=\"0px\"\n    y=\"0px\"\n    viewBox=\"0 0 {world.width}\n    {world.height}\"\n    enable-background=\"new 0 0 {world.width}\n    {world.height}\"\n    xml:space=\"preserve\">\n    <g>\n      {#each countries as country (country)}\n        <path\n          style=\"cursor: {country.hasData ? 'pointer' : 'normal'}; fill:{country.color}; stroke:hsl(100,25%,16%); stroke-width: {country.code == $selectedCountryCode ? 1 : 0}; paint-order: fill;\"\n          d={country.path}\n          on:mouseover={() => {\n            if(country.hasData) {\n              selectedCountryCode.set(country.code);\n            }\n          }}\n          on:mouseout={() => {\n            if(country.hasData) {\n              selectedCountryCode.set(null);\n            }\n          }}\n        />\n      {/each}\n    </g>\n  </svg>\n</figure>",
    "<script>\n  import { selectedDateIndex } from \"./main.store\";\n  export let dates = [\"NO DATA\"];\n  $: {\n    if (dates.length) {\n      $selectedDateIndex = dates.length - 1;\n    }\n  }\n  $: date = dates[$selectedDateIndex];\n  let intVal;\n  const play = () => {\n    clearInterval(intVal);\n    selectedDateIndex.set(0);\n    intVal = setInterval(() => {\n      if ($selectedDateIndex + 1 < dates.length) {\n        selectedDateIndex.set($selectedDateIndex + 1);\n      } else {\n        clearInterval(intVal);\n      }\n    }, 100);\n  };\n</script>\n\n<style>\n  input {\n    width: 100%;\n    vertical-align: middle;\n  }\n  p {\n    text-align: center;\n    margin-top: -2em;\n    font-size: 2em;\n    margin-bottom: 1em;\n  }\n\n  button,\n  input {\n    vertical-align: middle;\n    display: inline-block;\n    height: 2.5em;\n  }\n\n  .grid-container {\n    display: grid;\n    grid-template-columns: 0fr 1fr;\n    grid-template-rows: 1fr;\n    grid-template-areas: \"button slider\";\n    gap: 1em;\n  }\n\n  .button {\n    grid-area: button;\n    padding: 0.5em;\n  }\n\n  .slider {\n    grid-area: slider;\n    padding: 0.5em;\n  }\n</style>\n\n<p>{date}</p>\n<section class=\"grid-container\">\n  <button\n    type=\"button\"\n    on:click={() => {\n      play();\n    }}\n    class=\"button\">\n    PLAY\n  </button>\n  <input\n    class=\"slider\"\n    type=\"range\"\n    min=\"0\"\n    max={dates.length - 1}\n    bind:value={$selectedDateIndex} />\n</section>\n",
    "<script>\n  import { selectedDateIndex } from \"./main.store\";\n  import Chart from \"./Chart.svelte\";\n  export let body;\n  let totalCases;\n  let totalRecoveries;\n  let totalDeaths;\n  $: {\n    totalCases = calcTotal($selectedDateIndex, \"cases\");\n    totalRecoveries = calcTotal($selectedDateIndex, \"recoveries\");\n    totalDeaths = calcTotal($selectedDateIndex, \"deaths\");\n  }\n  const calcTotal = (index, dim) => {\n    let total = 0;\n    body.forEach(country => {\n      total += country.data[index][dim].value;\n    });\n    return total;\n  };\n</script>\n\n<style>\n  .total {\n    border: 1px solid #aaa;\n    display: block;\n    text-align: center;\n    padding: 0.5em;\n    margin-top: -4.5em;\n    font-size: 2em;\n    margin-left: 1em;\n    height: 2.5em;\n    width: 4em;\n    background: rgba(185, 174, 174, 0.5);\n    line-height: 3em;\n    color: #333;\n  }\n  .title {\n    font-size: 0.5em;\n    line-height: 0.5em;\n    text-decoration: underline;\n  }\n  .value {\n    font-size: 1em;\n    line-height: 2.5em;\n  }\n\n  .chart {\n    display: block;\n    text-align: center;\n    margin-top: -11em;\n    font-size: 2em;\n    margin-left: 1em;\n    height: 5em;\n    width: 5em;\n    line-height: 3em;\n  }\n</style>\n\n<span class=\"total\">\n  <div class=\"title\">Total Cases</div>\n  <div class=\"value\">{totalCases.toLocaleString()}</div>\n</span>\n\n<span>\n  <div class=\"chart\">\n    <Chart\n      cases={totalCases}\n      recoveries={totalRecoveries}\n      deaths={totalDeaths} />\n  </div>\n</span>\n",
    "<script>\n  export let cases;\n  export let deaths;\n  export let recoveries;\n  let total, casePercent, deathPercent, recoveryPercent;\n  $: {\n    total = cases + deaths + recoveries;\n    casePercent = ((cases / total) * 100);\n    deathPercent = ((deaths / total) * 100);\n    recoveryPercent = ((recoveries / total) * 100);\n  }\n</script>\n\n<style>\n  @media (max-width: 800px) {\n    .chart {\n      display:none;\n    }\n  }\n  .chart {\n    text-align: center;\n  }\n  .label {\n    font-size: 0.45em;\n    line-height: 1.2em;\n    float: right;\n  }\n  .key {\n    clear: both;\n    height: 0.5em;\n    margin-top: -0.8em;\n    vertical-align: middle;\n  }\n  svg {\n    width: 100%;\n    height: 100%;\n  }\n  .key-color {\n    width: 0.5em;\n    height: 0.5em;\n    float: left;\n  }\n  .cases {\n    background: rgb(200, 200, 200);\n  }\n  .deaths {\n    background: hsl(10, 100%, 60%);\n  }\n  .recoveries {\n    background: #85ed85;\n  }\n</style>\n\n<div class=\"chart\">\n  <svg height=\"20\" width=\"20\" viewBox=\"0 0 20 20\">\n    <circle r=\"10\" cx=\"10\" cy=\"10\" fill=\"white\" />\n    <circle\n      r=\"5\"\n      cx=\"10\"\n      cy=\"10\"\n      fill=\"transparent\"\n      stroke=\"#85ed85\"\n      stroke-width=\"10\"\n      stroke-dasharray=\"{(casePercent + deathPercent + recoveryPercent) * 31.4 / 100} 31.4\"\n      transform=\"rotate(-90) translate(-20)\" />\n    <circle\n      r=\"5\"\n      cx=\"10\"\n      cy=\"10\"\n      fill=\"transparent\"\n      stroke=\"hsl(10,100%,60%)\"\n      stroke-width=\"10\"\n      stroke-dasharray=\"{(casePercent + deathPercent) * 31.4 / 100} 31.4\"\n      transform=\"rotate(-90) translate(-20)\" />\n    <circle\n      r=\"5\"\n      cx=\"10\"\n      cy=\"10\"\n      fill=\"transparent\"\n      stroke=\"#d3cecf\"\n      stroke-width=\"10\"\n      stroke-dasharray=\"{casePercent * 31.4 / 100} 31.4\"\n      transform=\"rotate(-90) translate(-20)\" />\n    <circle r=\"5\" cx=\"10\" cy=\"10\" stroke=\"#aaa\" fill=\"#eee\" stroke-width=\"0.1\"/>\n    <circle r=\"9.95\" cx=\"10\" cy=\"10\" stroke=\"#bbb\" fill=\"transparent\" stroke-width=\"0.1\"/>\n\n  </svg>\n  <div class=\"key\">\n    <div class=\"key-color cases\" />\n    <div class=\"label\">Cases ({casePercent.toFixed(1)}%)</div>\n  </div>\n  <div class=\"key\">\n    <div class=\"key-color deaths\" />\n    <div class=\"label\">Deaths ({deathPercent.toFixed(1)}%)</div>\n  </div>\n  <div class=\"key\">\n    <div class=\"key-color recoveries\" />\n    <div class=\"label\">Recoveries ({recoveryPercent.toFixed(1)}%)</div>\n  </div>\n</div>\n"
  ],
  "names": [],
  "mappings": "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"
}